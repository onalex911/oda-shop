package ru.onalex.odashop.entities;

import jakarta.persistence.*;
import jakarta.validation.constraints.NotEmpty;
import jakarta.validation.constraints.NotNull;
import lombok.Data;
import org.hibernate.annotations.NaturalId;

@Entity
@Table(name = "tovar")
@Data
public class Tovar {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
//    code integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    @Column(name = "code")
    private int id;

    //    purl varchar(250)
    @NotNull
    @NotEmpty
    @Column(name = "purl")  // url товара
    private String purl;
    //    flpurl integer DEFAULT NULL,
    @Column(name = "flpurl")
    private int flpurl;
    //    code1 varchar(250),
    @Column(name = "code1")
    @NaturalId
    private String code1s;  // id в 1С
    //    nomer integer DEFAULT NULL,
    @Column(name = "nomer")
    private int nomer;      // порядковый номер при выводе по-умолчанию
    //    gruptov integer DEFAULT NULL,
    @NotNull
    @Column(name = "gruptov")
    private int grupTov;    // id группы, которой принадлежит товар
    //    name varchar(250),
    @NotNull
    @NotEmpty
    @Column(name = "name")
    private String tovName; // наименование товара
    //    pic varchar(250),
    @Column(name = "pic")   // превьюшка
    private String picPreview;
    //    bpic varchar(250),
    @Column(name = "bpic")
    private String picBig;  // фото товара
    //    ostatok integer DEFAULT NULL,
    @Column(name = "ostatok")
    private int ostatok;    // остаток на складе
    //    cena numeric(10,2) DEFAULT NULL,
    @Column(name = "cena", columnDefinition = "numeric(10,2)")
    private double cena;    // цена
    //    cena1 numeric(10,2) DEFAULT NULL,
    @Column(name = "cena1", columnDefinition = "numeric(10,2)")
    private double cena1;   // спеццена (?)
    //    ves numeric(10,3) DEFAULT NULL,
    @Column(name = "ves", columnDefinition = "numeric(10,3)")
    private double ves;     // вес
    //    blok integer DEFAULT NULL,
    @Column(name = "blok")
    private int blok;       // 0 - должно показываться, 1 - заблокировано для вывода
    //    data varchar(10),
    @Column(name = "data", columnDefinition = "varchar(10)")
    private String data;    // дата добавления
    //    data_red varchar(250),
    @Column(name = "data_red", columnDefinition = "varchar(250)")
    private String dataRed; // дата редактирования
    //    top varchar(250),
    @Column(name = "top", columnDefinition = "varchar(250)")
    private String top;     // ?
    //    dop_parametru varchar(250),
    @Column(name = "dop_parametru", columnDefinition = "varchar(250)")
    private String dopParametru;    // ?
    //    link varchar(250),
    @Column(name = "link", columnDefinition = "varchar(250)")
    private String link;    // ?
    //    prosmotru integer DEFAULT NULL,
    @Column(name = "prosmotru")
    private int prosmotru;  // кол-во просмотров (пока не используется)
    //    comment text,
    @Column(name = "comment", columnDefinition = "text")
    private String comment; // комментарий
    //    comment1 text,
    @Column(name = "comment1", columnDefinition = "text")
    private String comment1;// еще комментарий
    //    dop varchar(250)
    @NotNull
    @Column(name = "dop", columnDefinition = "varchar(250)")
    private String dop;     // артикул

//    @ManyToOne
//    @JoinColumn(name="gruptov")
//    private GrupTov grupTov;
}
